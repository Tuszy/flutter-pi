name: CMake

on:
  push:
    branches: [ master, feature/gh-actions ]
  pull_request:
    branches: [ master, feature/gh-actions ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: [linux, bullseye]

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt-get install -y cmake libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev ttf-mscorefonts-installer fontconfig libsystemd-dev libinput-dev libudev-dev  libxkbcommon-dev ninja-build libgstreamer-plugins-base1.0-dev

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DBUILD_OMXPLAYER_VIDEO_PLAYER_PLUGIN=On -DBUILD_GSTREAMER_AUDIO_PLAYER_PLUGIN=On -DBUILD_GSTREAMER_VIDEO_PLAYER_PLUGIN=On -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -GNinja

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      if: false
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
  
  # This is really stupid. Normally you would use a strategy matrix for this. But somehow GitHub doesn't expressions in the docker image name.
  # e.g. this doesn't work:
  #  uses: docker://${{ matrix.image }}
  # It'll just say matrix is not defined.
  # Even if you put command inside a local github action, and specify the image as an input to the github action, it'll also say it's not defined.           
  build-armv7:
    name: build (debian bullseye armv7)
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v2
     
      - name: Clone, Configure, Build and Install flutter-pi
        uses: docker://arm32v7/debian:bullseye
        with:
          entrypoint: /bin/bash
          args: |
            -c "\
            export DEBIAN_FRONTEND=noninteractive && \
            echo ::group::Installing dependencies && \
            apt-get update && \
            apt-get install -y git cmake ninja-build gcc g++ libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev fonts-liberation fontconfig libsystemd-dev libinput-dev libudev-dev libxkbcommon-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad gstreamer1.0-libav && \
            echo ::endgroup:: && \
            echo ::group::Cloning && \
            git clone https://github.com/ardera/flutter-pi -b ${{ github.ref_name }} && \
            echo ::endgroup:: && \
            echo ::group::Configuring build && \
            cmake -Bflutter-pi/build -Sflutter-pi -GNinja -DCMAKE_BUILD_TYPE=Release ${{ inputs.cmake-args }}&& \
            echo ::endgroup:: && \
            echo ::group::Building && \
            ninja -Cflutter-pi/build && \
            echo ::endgroup:: && \
            echo ::group::Installing && \
            ninja -Cflutter-pi/build install \
            "
  
  build-oldstable-armv7:
    name: build (debian buster armv7)
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v2
     
      - name: Clone, Configure, Build and Install flutter-pi
        uses: docker://arm32v7/debian:buster
        with:
          entrypoint: /bin/bash
          args: |
            -c "\
            export DEBIAN_FRONTEND=noninteractive && \
            echo ::group::Installing dependencies && \
            apt-get update && \
            apt-get install -y git cmake ninja-build gcc g++ libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev fonts-liberation fontconfig libsystemd-dev libinput-dev libudev-dev libxkbcommon-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad gstreamer1.0-libav && \
            echo ::endgroup:: && \
            echo ::group::Cloning && \
            git clone https://github.com/ardera/flutter-pi -b ${{ github.ref_name }} && \
            echo ::endgroup:: && \
            echo ::group::Configuring build && \
            cmake -Bflutter-pi/build -Sflutter-pi -GNinja -DCMAKE_BUILD_TYPE=Release ${{ inputs.cmake-args }}&& \
            echo ::endgroup:: && \
            echo ::group::Building && \
            ninja -Cflutter-pi/build && \
            echo ::endgroup:: && \
            echo ::group::Installing && \
            ninja -Cflutter-pi/build install \
            "
            
  build-oldoldstable-armv7:
    name: build (debian stretch armv7)
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v2
     
      - name: Clone, Configure, Build and Install flutter-pi
        uses: docker://arm32v7/debian:stretch
        with:
          entrypoint: /bin/bash
          args: |
            -c "\
            export DEBIAN_FRONTEND=noninteractive && \
            echo ::group::Installing dependencies && \
            apt-get update && \
            apt-get install -y git cmake ninja-build gcc g++ libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev fonts-liberation fontconfig libsystemd-dev libinput-dev libudev-dev libxkbcommon-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad gstreamer1.0-libav && \
            echo ::endgroup:: && \
            echo ::group::Cloning && \
            git clone https://github.com/ardera/flutter-pi -b ${{ github.ref_name }} && \
            echo ::endgroup:: && \
            echo ::group::Configuring build && \
            cmake -Bflutter-pi/build -Sflutter-pi -GNinja -DCMAKE_BUILD_TYPE=Release ${{ inputs.cmake-args }}&& \
            echo ::endgroup:: && \
            echo ::group::Building && \
            ninja -Cflutter-pi/build && \
            echo ::endgroup:: && \
            echo ::group::Installing && \
            ninja -Cflutter-pi/build install \
            "
  
  build-armv8:
    name: build (debian bullseye armv8)
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v2
     
      - name: Clone, Configure, Build and Install flutter-pi
        uses: docker://arm64v8/debian:bullseye
        with:
          entrypoint: /bin/bash
          args: |
            -c "\
            export DEBIAN_FRONTEND=noninteractive && \
            echo ::group::Installing dependencies && \
            apt-get update && \
            apt-get install -y git cmake ninja-build gcc g++ libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev fonts-liberation fontconfig libsystemd-dev libinput-dev libudev-dev libxkbcommon-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad gstreamer1.0-libav && \
            echo ::endgroup:: && \
            echo ::group::Cloning && \
            git clone https://github.com/ardera/flutter-pi -b ${{ github.ref_name }} && \
            echo ::endgroup:: && \
            echo ::group::Configuring build && \
            cmake -Bflutter-pi/build -Sflutter-pi -GNinja -DCMAKE_BUILD_TYPE=Release ${{ inputs.cmake-args }}&& \
            echo ::endgroup:: && \
            echo ::group::Building && \
            ninja -Cflutter-pi/build && \
            echo ::endgroup:: && \
            echo ::group::Installing && \
            ninja -Cflutter-pi/build install \
            "
            
  build-i386:
    name: build (debian bullseye i386)
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v2
     
      - name: Clone, Configure, Build and Install flutter-pi
        uses: docker://i386/debian:bullseye
        with:
          entrypoint: /bin/bash
          args: |
            -c "\
            export DEBIAN_FRONTEND=noninteractive && \
            echo ::group::Installing dependencies && \
            apt-get update && \
            apt-get install -y git cmake ninja-build gcc g++ libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev fonts-liberation fontconfig libsystemd-dev libinput-dev libudev-dev libxkbcommon-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad gstreamer1.0-libav && \
            echo ::endgroup:: && \
            echo ::group::Cloning && \
            git clone https://github.com/ardera/flutter-pi -b ${{ github.ref_name }} && \
            echo ::endgroup:: && \
            echo ::group::Configuring build && \
            cmake -Bflutter-pi/build -Sflutter-pi -GNinja -DCMAKE_BUILD_TYPE=Release ${{ inputs.cmake-args }}&& \
            echo ::endgroup:: && \
            echo ::group::Building && \
            ninja -Cflutter-pi/build && \
            echo ::endgroup:: && \
            echo ::group::Installing && \
            ninja -Cflutter-pi/build install \
            "
            
  build-amd64:
    name: build (debian bullseye amd64)
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v2
     
      - name: Clone, Configure, Build and Install flutter-pi
        uses: docker://amd64/debian:bullseye
        with:
          entrypoint: /bin/bash
          args: |
            -c "\
            export DEBIAN_FRONTEND=noninteractive && \
            echo ::group::Installing dependencies && \
            apt-get update && \
            apt-get install -y git cmake ninja-build gcc g++ libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev fonts-liberation fontconfig libsystemd-dev libinput-dev libudev-dev libxkbcommon-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad gstreamer1.0-libav && \
            echo ::endgroup:: && \
            echo ::group::Cloning && \
            git clone https://github.com/ardera/flutter-pi -b ${{ github.ref_name }} && \
            echo ::endgroup:: && \
            echo ::group::Configuring build && \
            cmake -Bflutter-pi/build -Sflutter-pi -GNinja -DCMAKE_BUILD_TYPE=Release ${{ inputs.cmake-args }}&& \
            echo ::endgroup:: && \
            echo ::group::Building && \
            ninja -Cflutter-pi/build && \
            echo ::endgroup:: && \
            echo ::group::Installing && \
            ninja -Cflutter-pi/build install \
            "
  
  # Totally unneccessary.
  build-riscv64:
    name: build (debian sid riscv64)
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v2
     
      - name: Clone, Configure, Build and Install flutter-pi
        uses: docker://riscv64/debian:sid
        with:
          entrypoint: /bin/bash
          args: |
            -c "\
            export DEBIAN_FRONTEND=noninteractive && \
            echo ::group::Installing dependencies && \
            apt-get update && \
            apt-get install -y git cmake ninja-build gcc g++ libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev fonts-liberation fontconfig libsystemd-dev libinput-dev libudev-dev libxkbcommon-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad gstreamer1.0-libav && \
            echo ::endgroup:: && \
            echo ::group::Cloning && \
            git clone https://github.com/ardera/flutter-pi -b ${{ github.ref_name }} && \
            echo ::endgroup:: && \
            echo ::group::Configuring build && \
            cmake -Bflutter-pi/build -Sflutter-pi -GNinja -DCMAKE_BUILD_TYPE=Release ${{ inputs.cmake-args }}&& \
            echo ::endgroup:: && \
            echo ::group::Building && \
            ninja -Cflutter-pi/build && \
            echo ::endgroup:: && \
            echo ::group::Installing && \
            ninja -Cflutter-pi/build install \
            "
            
